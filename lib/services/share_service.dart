import 'package:share_plus/share_plus.dart';
import 'package:url_launcher/url_launcher.dart';
import '../models/food_item.dart';

class ShareService {
  static ShareService? _instance;
  static ShareService get instance => _instance ??= ShareService._();
  
  ShareService._();

  /// Share food item details
  Future<void> shareFood(FoodItem food, String province) async {
    final text = '''
üç≤ ${food.name} - ƒê·∫∑c s·∫£n $province

üìù M√¥ t·∫£: ${food.description}

üìç ƒê·ªãa ƒëi·ªÉm n·ªïi ti·∫øng: ${food.location}

---
Kh√°m ph√° th√™m ƒë·∫∑c s·∫£n Vi·ªát Nam v·ªõi ·ª©ng d·ª•ng Oneno Food!
#OnenoFood #ƒê·∫∑cs·∫£nVi·ªátNam #$province
''';

    try {
      await Share.share(
        text,
        subject: '${food.name} - ƒê·∫∑c s·∫£n $province',
      );
    } catch (e) {
      throw Exception('Kh√¥ng th·ªÉ chia s·∫ª: $e');
    }
  }

  /// Share app download link
  Future<void> shareApp() async {
    const text = '''
üç≤ Oneno Food - ƒê·∫∑c s·∫£n v√πng mi·ªÅn Vi·ªát Nam

Kh√°m ph√° ƒë·∫∑c s·∫£n 63 t·ªânh th√†nh Vi·ªát Nam ngay tr√™n ƒëi·ªán tho·∫°i!

‚ú® T√≠nh nƒÉng:
‚Ä¢ Th√¥ng tin chi ti·∫øt v·ªÅ m√≥n ƒÉn truy·ªÅn th·ªëng
‚Ä¢ Ph√¢n lo·∫°i r√µ r√†ng theo danh m·ª•c
‚Ä¢ L∆∞u danh s√°ch y√™u th√≠ch
‚Ä¢ Ho·∫°t ƒë·ªông offline 100%

T·∫£i ngay ƒë·ªÉ kh√°m ph√° ·∫©m th·ª±c Vi·ªát Nam!
#OnenoFood #ƒê·∫∑cs·∫£nVi·ªátNam #·∫®mth·ª±cVi·ªát
''';

    try {
      await Share.share(text, subject: 'Oneno Food - ƒê·∫∑c s·∫£n v√πng mi·ªÅn Vi·ªát Nam');
    } catch (e) {
      throw Exception('Kh√¥ng th·ªÉ chia s·∫ª ·ª©ng d·ª•ng: $e');
    }
  }

  /// Share to specific social media platform
  Future<void> shareToSocialMedia(
    String platform,
    FoodItem food,
    String province,
  ) async {
    final text = '${food.name} - ƒê·∫∑c s·∫£n $province. ${food.description}';
    final hashtags = '#OnenoFood #ƒê·∫∑cs·∫£nVi·ªátNam #$province';
    
    String url;
    
    switch (platform.toLowerCase()) {
      case 'facebook':
        url = 'https://www.facebook.com/sharer/sharer.php?u=${Uri.encodeComponent('https://onenofood.com')}&quote=${Uri.encodeComponent('$text $hashtags')}';
        break;
      case 'twitter':
        url = 'https://twitter.com/intent/tweet?text=${Uri.encodeComponent('$text $hashtags')}';
        break;
      case 'instagram':
        // Instagram doesn't support direct sharing via URL, so we'll copy to clipboard
        await Share.share('$text $hashtags');
        return;
      default:
        await Share.share('$text $hashtags');
        return;
    }

    try {
      final uri = Uri.parse(url);
      if (await canLaunchUrl(uri)) {
        await launchUrl(uri, mode: LaunchMode.externalApplication);
      } else {
        // Fallback to regular share
        await Share.share('$text $hashtags');
      }
    } catch (e) {
      throw Exception('Kh√¥ng th·ªÉ chia s·∫ª l√™n $platform: $e');
    }
  }

  /// Generate QR code data for food item
  String generateQRData(FoodItem food, String province) {
    return 'oneno_food:$province:${food.name}';
  }

  /// Share QR code for food item
  Future<void> shareQRCode(FoodItem food, String province) async {
    final qrData = generateQRData(food, province);
    final text = '''
üì± Qu√©t m√£ QR ƒë·ªÉ xem chi ti·∫øt m√≥n ƒÉn:

${food.name} - $province

M√£ QR: $qrData

S·ª≠ d·ª•ng ·ª©ng d·ª•ng Oneno Food ƒë·ªÉ qu√©t m√£ n√†y!
''';

    try {
      await Share.share(text, subject: 'QR Code - ${food.name}');
    } catch (e) {
      throw Exception('Kh√¥ng th·ªÉ chia s·∫ª m√£ QR: $e');
    }
  }

  /// Open app store for rating
  Future<void> openAppStore() async {
    // For demo purposes, we'll open a placeholder URL
    const url = 'https://play.google.com/store/apps/details?id=com.app.oneno_food';
    
    try {
      final uri = Uri.parse(url);
      if (await canLaunchUrl(uri)) {
        await launchUrl(uri, mode: LaunchMode.externalApplication);
      } else {
        throw Exception('Kh√¥ng th·ªÉ m·ªü c·ª≠a h√†ng ·ª©ng d·ª•ng');
      }
    } catch (e) {
      throw Exception('L·ªói khi m·ªü c·ª≠a h√†ng ·ª©ng d·ª•ng: $e');
    }
  }

  /// Open email client for support
  Future<void> sendSupportEmail() async {
    const email = 'support@onenofood.com';
    const subject = 'H·ªó tr·ª£ Oneno Food';
    const body = 'Xin ch√†o,\n\nT√¥i c·∫ßn h·ªó tr·ª£ v·ªÅ ·ª©ng d·ª•ng Oneno Food.\n\nChi ti·∫øt v·∫•n ƒë·ªÅ:\n';
    
    final url = 'mailto:$email?subject=${Uri.encodeComponent(subject)}&body=${Uri.encodeComponent(body)}';
    
    try {
      final uri = Uri.parse(url);
      if (await canLaunchUrl(uri)) {
        await launchUrl(uri);
      } else {
        throw Exception('Kh√¥ng th·ªÉ m·ªü ·ª©ng d·ª•ng email');
      }
    } catch (e) {
      throw Exception('L·ªói khi m·ªü email: $e');
    }
  }

  /// Open website
  Future<void> openWebsite() async {
    const url = 'https://www.onenofood.com';
    
    try {
      final uri = Uri.parse(url);
      if (await canLaunchUrl(uri)) {
        await launchUrl(uri, mode: LaunchMode.externalApplication);
      } else {
        throw Exception('Kh√¥ng th·ªÉ m·ªü website');
      }
    } catch (e) {
      throw Exception('L·ªói khi m·ªü website: $e');
    }
  }
}
